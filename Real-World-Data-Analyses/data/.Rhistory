xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
if (counter != 4^r) {
df <- rbind(df, cbind(left, right, bottom, top))
for (i in 1:4) {
c1 = ifelse(left[i]   == xmid, xmid, xmin)
c2 = ifelse(right[i]  == xmid, xmid, xmax)
c3 = ifelse(bottom[i] == ymid, ymid, ymin)
c4 = ifelse(top[i]    == ymid, ymid, ymax)
q <- append(q, list(c(c1, c2, c3, c4)))
counter <- counter + 1
}
}
q <- q[-1]
}
q = list()
for (i in 1:4) {
c1 = ifelse(left[i]   == xmid, xmid, xmin)
c2 = ifelse(right[i]  == xmid, xmid, xmax)
c3 = ifelse(bottom[i] == ymid, ymid, ymin)
c4 = ifelse(top[i] == ymid, ymid, ymax)
q <- append(q, list(c(c1, c2, c3, c4)))
}
q
while (length(q) != 0) {
xmin   <- q[[1]][1]
xmax   <- q[[1]][2]
ymin   <- q[[1]][3]
ymax   <- q[[1]][4]
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
if (counter != 4^r) {
df <- rbind(df, cbind(left, right, bottom, top))
for (i in 1:4) {
c1 = ifelse(left[i]   == xmid, xmid, xmin)
c2 = ifelse(right[i]  == xmid, xmid, xmax)
c3 = ifelse(bottom[i] == ymid, ymid, ymin)
c4 = ifelse(top[i]    == ymid, ymid, ymax)
q <- append(q, list(c(c1, c2, c3, c4)))
counter <- counter + 1
}
}
q <- q[-1]
}
View(df)
sum(4^c(1:r)
)
xmid = (xmin + xmax) / 2
xmin = 0
xmax = 1
ymin = 0
ymax = 1
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- as.data.frame(cbind(left,right,bottom,top))
q = list()
for (i in 1:4) {
c1 = ifelse(left[i]   == xmid, xmid, xmin)
c2 = ifelse(right[i]  == xmid, xmid, xmax)
c3 = ifelse(bottom[i] == ymid, ymid, ymin)
c4 = ifelse(top[i] == ymid, ymid, ymax)
q <- append(q, list(c(c1, c2, c3, c4)))
}
counter <- 0
while (length(q) != 0) {
xmin   <- q[[1]][1]
xmax   <- q[[1]][2]
ymin   <- q[[1]][3]
ymax   <- q[[1]][4]
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
if (counter != sum(4^c(1:r))) {
df <- rbind(df, cbind(left, right, bottom, top))
for (i in 1:4) {
c1 = ifelse(left[i]   == xmid, xmid, xmin)
c2 = ifelse(right[i]  == xmid, xmid, xmax)
c3 = ifelse(bottom[i] == ymid, ymid, ymin)
c4 = ifelse(top[i]    == ymid, ymid, ymax)
q <- append(q, list(c(c1, c2, c3, c4)))
counter <- counter + 1
}
}
q <- q[-1]
}
View(df)
xmin = 0
xmax = 1
ymin = 0
ymax = 1
sum(4^c(1:r-1))
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- as.data.frame(cbind(left,right,bottom,top))
q = list()
for (i in 1:4) {
c1 = ifelse(left[i]   == xmid, xmid, xmin)
c2 = ifelse(right[i]  == xmid, xmid, xmax)
c3 = ifelse(bottom[i] == ymid, ymid, ymin)
c4 = ifelse(top[i] == ymid, ymid, ymax)
q <- append(q, list(c(c1, c2, c3, c4)))
}
counter <- 0
View(df)
q = list()
for (i in 1:4) {
c1 = ifelse(left[i]   == xmid, xmid, xmin)
c2 = ifelse(right[i]  == xmid, xmid, xmax)
c3 = ifelse(bottom[i] == ymid, ymid, ymin)
c4 = ifelse(top[i] == ymid, ymid, ymax)
q <- append(q, list(c(c1, c2, c3, c4)))
}
q
df
xmin   <- df[counter, 1]
xmax   <- df[counter, 2]
ymin   <- df[counter, 3]
ymax   <- df[counter, 4]
counter <- 1
xmin   <- df[counter, 1]
xmax   <- df[counter, 2]
ymin   <- df[counter, 3]
ymax   <- df[counter, 4]
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
left
right
bottom
top
cbind(left, right, bottom, top)
counter = 4^(r-1)
4^(r-1)
sum(1:4^(c(1:(r-1))))
sum(1:4^c(1:(r-1)))
sum(4^c(1:(r-1)))
df <- rbind(df, cbind(left, right, bottom, top))
View(df)
xmin = 0
xmax =1
ymin = 0
ymax =1
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- as.data.frame(cbind(left,right,bottom,top))
counter <- 1
while (counter != sum(1:4^(c(1:(r-1))))) {
xmin   <- df[counter, 1]
xmax   <- df[counter, 2]
ymin   <- df[counter, 3]
ymax   <- df[counter, 4]
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- rbind(df, cbind(left, right, bottom, top))
}
xmin = 0
xmax = 1
ymin = 0
ymax = 1
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- as.data.frame(cbind(left,right,bottom,top))
counter <- 1
while (counter != sum(1:4^(c(1:(r-1))))) {
xmin   <- df[counter, 1]
xmax   <- df[counter, 2]
ymin   <- df[counter, 3]
ymax   <- df[counter, 4]
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- rbind(df, cbind(left, right, bottom, top))
counter <- counter + 1
}
xmin = 0
xmax = 1
ymin = 0
ymax = 1
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- as.data.frame(cbind(left,right,bottom,top))
counter <- 1
while (counter != sum(4^(c(1:(r-1))))) {
xmin   <- df[counter, 1]
xmax   <- df[counter, 2]
ymin   <- df[counter, 3]
ymax   <- df[counter, 4]
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- rbind(df, cbind(left, right, bottom, top))
counter <- counter + 1
}
View(df)
df <- as.data.frame(df[-(1:sum(4^(1:(r-1)))),])
sum(duplicated(df))
View(df)
4^3
xmin = 0
xmax = 1
ymin = 0
ymax = 1
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- as.data.frame(cbind(left,right,bottom,top))
counter <- 1
while (counter != sum(4^(c(1:(r-1)))) + 1) {
xmin   <- df[counter, 1]
xmax   <- df[counter, 2]
ymin   <- df[counter, 3]
ymax   <- df[counter, 4]
xmid = (xmin + xmax) / 2
ymid = (ymin + ymax) / 2
length = abs((xmax - xmin)) / 2
left   = c(xmid, xmid - length, xmid - length, xmid)
right  = c(xmid + length, xmid, xmid, xmid  + length)
bottom = c(ymid, ymid, ymid - length, ymid - length)
top    = c(ymid + length, ymid + length, ymid, ymid)
df <- rbind(df, cbind(left, right, bottom, top))
counter <- counter + 1
}
df <- as.data.frame(df[-(1:sum(4^(1:(r-1)))),])
View(df)
library(data.table)
library(ggplot2)
library(kableExtra)
setwd("C:/Users/duytp/Desktop/P2P-Project/Uniform-Network-Simulations/")
# Read in the network
nw <- fread("uniform_network.txt")
colnames(nw) <- c('X', 'Y')
# Count number of nodes in each quadrant
df <- temp(0, 1, 0, 1, 3)
freq <- sapply(1:nrow(df), function(i) sum(nw$X > df$left[i] & nw$X < df$right[i] & nw$Y > df$bottom[i] & nw$Y < df$top[i]))
source("C:/Users/duytp/Desktop/P2P-Project/Uniform-Network-Simulations/help_function.R", echo=TRUE)
# Read in the network
nw <- fread("uniform_network.txt")
colnames(nw) <- c('X', 'Y')
# Count number of nodes in each quadrant
df <- temp(0, 1, 0, 1, 3)
freq <- sapply(1:nrow(df), function(i) sum(nw$X > df$left[i] & nw$X < df$right[i] & nw$Y > df$bottom[i] & nw$Y < df$top[i]))
# Scatter plot
segs <- data.frame(x1 = c(rep(0, 9), 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1),
x2 = c(rep(1, 9), 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1),
y1 = c(0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1, rep(0, 9)),
y2 = c(0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1, rep(1, 9)))
ggplot(nw, aes(x = X, y = Y)) +
ggtitle("Uniform Network - 10,000 Nodes") +
geom_point(color = "grey50", alpha = 0.5) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = function(x) ifelse(x == 0, "0", x)) +
scale_x_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = function(x) ifelse(x == 0, "0", x))  +
theme(panel.border = element_rect(colour = "black", fill=NA, size = 1),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5)) +
geom_segment(data = segs, aes(x = x1, xend = x2, y = y1, yend = y2), linetype = "dashed", size = 0.7)
# Bar plot
bp <- data.frame("Quadrant" = factor(paste0("q", 1:64), levels = paste0("q", 1:16)), Frequency = freq)
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 1000)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
# Bar plot
bp <- data.frame("Quadrant" = factor(paste0("q", 1:64), levels = paste0("q", 1:64)), Frequency = freq)
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 1000)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 250)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 250)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes per Quadrant") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 250)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
source("C:/Users/duytp/Desktop/P2P-Project/Uniform-Network-Simulations/help_function.R", echo=TRUE)
library(data.table)
library(ggplot2)
library(kableExtra)
setwd("C:/Users/duytp/Desktop/P2P-Project/data/")
# Read in the network
nw <- fread("wondernetwork_scaled.txt")
colnames(nw) <- c('X', 'Y')
# Count number of nodes in each quadrant
df <- temp(0, 1, 0, 1, 3)
freq <- sapply(1:nrow(df), function(i) sum(nw$X > df$left[i] & nw$X < df$right[i] & nw$Y > df$bottom[i] & nw$Y < df$top[i]))
# Scatter plot
segs <- data.frame(x1 = c(rep(0, 9), 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1),
x2 = c(rep(1, 9), 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1),
y1 = c(0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1, rep(0, 9)),
y2 = c(0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1, rep(1, 9)))
ggplot(nw, aes(x = X, y = Y)) +
ggtitle("Wondernetwork - 243 Nodes") +
geom_point(color = "grey50", alpha = 0.5) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = function(x) ifelse(x == 0, "0", x)) +
scale_x_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = function(x) ifelse(x == 0, "0", x))  +
theme(panel.border = element_rect(colour = "black", fill=NA, size = 1),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5)) +
geom_segment(data = segs, aes(x = x1, xend = x2, y = y1, yend = y2), linetype = "dashed", size = 0.7)
# Bar plot
bp <- data.frame("Quadrant" = factor(paste0("q", 1:64), levels = paste0("q", 1:16)), Frequency = freq)
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 230)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
# Bar plot
bp <- data.frame("Quadrant" = factor(paste0("q", 1:64), levels = paste0("q", 1:64)), Frequency = freq)
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 230)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
ggplot(bp, aes(x = Quadrant, y = Frequency)) +
ggtitle("Distribution of Nodes") +
geom_bar(stat = "identity", color = "black", fill = "grey90", size = 1) +
theme(axis.line = element_line(color = "black", size = 1.3),
panel.background = element_blank(),
panel.grid = element_line(size = 1, color = "grey90"),
axis.text = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title = element_text(size = 18),
plot.title = element_text(size = 20, hjust = 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 15),
legend.position = c(0.8, 0.9),
legend.key.size = unit(3,"line")) +
scale_y_continuous(limits = c(0, 230)) +
geom_hline(aes(yintercept = mean(Frequency), color = "red"), size = 1.3, linetype = "dashed") +
scale_color_manual(labels = "Average", values = "red")
r =
1
sum(4^(c(1:(r-1)))
)
sum(4^(c(1:(r-1)))) + 1
sum(4^(c(1:(2-1)))) + 1
# Count number of nodes in each quadrant
df <- temp(0, 1, 0, 1, 2)
freq <- sapply(1:nrow(df), function(i) sum(nw$X > df$left[i] & nw$X < df$right[i] & nw$Y > df$bottom[i] & nw$Y < df$top[i]))
4^(c(1:(r-1)))) + 1
4^(c(1:(1-1)))) + 1
4^(c(1:(1-1))) + 1
# Count number of nodes in each quadrant
df <- temp(0, 1, 0, 1, 1)
freq <- sapply(1:nrow(df), function(i) sum(nw$X > df$left[i] & nw$X < df$right[i] & nw$Y > df$bottom[i] & nw$Y < df$top[i]))
sum(4^(c(1:(r-1)))) + 1
r <- 2
sum(4^(c(1:(r-1)))) + 1
# Count number of nodes in each quadrant
df <- temp(0, 1, 0, 1, 2)
View(df)
# Count number of nodes in each quadrant
df <- temp(0, 1, 0, 1, 3)
View(df)
log(0)
log(1)
log2(240)
